#
CUDA_DIR = /lustre/haven/proj/AACE/sw/nvidia_sdk/opt/nvidia/hpcsdk/Linux_x86_64

# Override Mac compiler to use OpenMP
#CXX		= g++-8
CXX		= ${CC}
NVCC		= nvcc
#INCLUDES	= -I${MKLROOT}/include ${OPENBLAS_INC} -I${CUDA_DIR}/include -I./src
#INCLUDES	= -I${CUDA_DIR}/include -I${CUDA_DIR}/samples/common/inc -I./src
#INCLUDES	= -I${CUDA_DIR}/20.5/compilers/include -I${CUDA_DIR}/20.5/math_libs/11.0/include  -I./src
INCLUDES	= -I${CUDA_DIR}/20.5/compilers/include -I${CUDA_DIR}/20.5/math_libs/10.1/include  -I./src

CXXFLAGS+=$(BUILD)
CXXFLAGS+=$(INCLUDES)
##CXXFLAGS+= -std=c++11 -g -O3 -m64 -fopenmp 
CXXFLAGS+= -std=c++11 -g -O3 -m64 

NVCCFLAGS+=$(BUILD)
#NVCCFLAGS+=-I./src -I${CUDA_DIR}/include -I${CUDA_DIR}/samples/common/inc
#NVCCFLAGS+=-I./src -I${CUDA_DIR}/20.5/compilers/include -I${CUDA_DIR}/20.5/math_libs/11.0/include
NVCCFLAGS+=-I./src -I${CUDA_DIR}/20.5/compilers/include -I${CUDA_DIR}/20.5/math_libs/10.1/include
#CUDALIB = -L${CUDA_DIR}/lib64/stubs
#CUDALIB	= -L${CUDA_DIR}/cuda/11.0/lib64 -L${CUDA_DIR}/20.5/math_libs/11.0/lib64
#CUDALIB	= -L${CUDA_DIR}/cuda/11.0/lib64 -L${CUDA_DIR}/20.5/math_libs/10.1/lib64
CUDALIB = -L${CUDA_DIR}/20.5/math_libs/10.1/lib64 
SRCDIRS = ./src
SRCFILES = $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/MPCC.cpp))
SRCFILES += $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/*.cu))
$(info SRCFILES is $(SRCFILES))

#SRCS = ./src/MPCC.cpp ./src/MPCCmatrix.cu 
#OBJS = $(SRCS:./src/%.cpp=./%.o)
#OBJS = $(SRCFILES:%.cu=%.o)
OBJS = ./src/MPCC.o ./src/MPCCmatrix.o
#$(info SRCS is $(SRCS))
$(info OBJS is $(OBJS))

LIBDIR		= -L$(MKLROOT)/lib ${OPENBLAS_LIB} $(CUDALIB) ${R_LIB}
#LIB 		= -lcuda -lcublas -liomp5 -lstdc++ -lm -ldl
LIB 		= -lcuda -lcublas -lstdc++ -lm -ldl
LIBS		 = $(LIBDIR) $(LIB)

TARGET=MPCC
.SUFFIXES:.cpp .cu .o

%.o:%.cpp
	$(NVCC) $(CXXFLAGS) -c $< -o $@

%.o:%.cu
	$(NVCC) $(NVCCFLAGS) -c $< -o $@

$(TARGET):$(OBJS)
	$(NVCC) -o $(TARGET) $(OBJS) $(LIBS)

clean:
	rm -f ./*.o *~ ./src/*.o 

